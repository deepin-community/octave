@c DO NOT EDIT!  Generated automatically by genpropdoc.m.

@c Copyright (C) 2014-2024 The Octave Project Developers
@c
@c See the file COPYRIGHT.md in the top-level directory of this
@c distribution or <https://octave.org/copyright/>.
@c
@c This file is part of Octave.
@c
@c Octave is free software: you can redistribute it and/or modify it
@c under the terms of the GNU General Public License as published by
@c the Free Software Foundation, either version 3 of the License, or
@c (at your option) any later version.
@c
@c Octave is distributed in the hope that it will be useful, but
@c WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with Octave; see the file COPYING.  If not, see
@c <https://www.gnu.org/licenses/>.

Properties of @code{uipanel} objects (@pxref{XREFuipanel,,uipanel}):

@subsubheading Categories:

@ref{XREFuipanelcategoryAppearance, , @w{Appearance}}@: | @ref{XREFuipanelcategoryCallbackExecution, , @w{Callback Execution}}@: | @ref{XREFuipanelcategoryCreation/Deletion, , @w{Creation/Deletion}}@: | @ref{XREFuipanelcategoryDisplay, , @w{Display}}@: | @ref{XREFuipanelcategoryMouseInteraction, , @w{Mouse Interaction}}@: | @ref{XREFuipanelcategoryObjectIdentification, , @w{Object Identification}}@: | @ref{XREFuipanelcategoryObjectPosition, , @w{Object Position}}@: | @ref{XREFuipanelcategoryParent/Children, , @w{Parent/Children}}@: | @ref{XREFuipanelcategoryTextAppearance, , @w{Text Appearance}}@: 

@anchor{XREFuipanelcategoryAppearance}
@subsubheading Appearance
@prindex uipanel Appearance

@table @asis

@anchor{XREFuipanelbackgroundcolor}
@prindex uipanel backgroundcolor
@item @code{backgroundcolor}: colorspec, def. @code{[0.9400   0.9400   0.9400]}
The color value of the background of this panel.


@anchor{XREFuipanelbordertype}
@prindex uipanel bordertype
@item @code{bordertype}: @qcode{"beveledin"} | @qcode{"beveledout"} | @{@qcode{"etchedin"}@} | @qcode{"etchedout"} | @qcode{"line"} | @qcode{"none"}
Sets whether or not a line border will surround the panel.


@anchor{XREFuipanelborderwidth}
@prindex uipanel borderwidth
@item @code{borderwidth}: whole number scalar, def. @code{1}
The width of the line border in pixels.


@anchor{XREFuipanelforegroundcolor}
@prindex uipanel foregroundcolor
@item @code{foregroundcolor}: colorspec, def. @code{[0   0   0]}
The color value of the title text for this panel.


@anchor{XREFuipanelhighlightcolor}
@prindex uipanel highlightcolor
@item @code{highlightcolor}: colorspec, def. @code{[1   1   1]}
The color value of the line bordering this panel.


@anchor{XREFuipanelshadowcolor}
@prindex uipanel shadowcolor
@item @code{shadowcolor}: colorspec, def. @code{[0.7000   0.7000   0.7000]}
The color value of the line surrounding the border line around this panel.  @xref{Colors, , colorspec}.

@end table

@anchor{XREFuipanelcategoryCallbackExecution}
@subsubheading Callback Execution
@prindex uipanel CallbackExecution

@table @asis

@anchor{XREFuipanelbusyaction}
@prindex uipanel busyaction
@item @code{busyaction}: @qcode{"cancel"} | @{@qcode{"queue"}@}
Define how Octave handles the execution of this object's callback properties when it is unable to interrupt another object's executing callback.  This is only relevant when the currently executing callback object has its @code{interruptible} property set to @qcode{"off"}.  The @code{busyaction} property of the interrupting callback object indicates whether the interrupting callback is queued (@qcode{"queue"} (default)) or discarded (@qcode{"cancel"}).
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuipanelinterruptible}
@prindex uipanel interruptible
@item @code{interruptible}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether this object's callback functions may be interrupted by other callbacks.  By default @code{interruptible} is @qcode{"on"} and callbacks that make use of @code{drawnow}, @code{figure}, @code{waitfor}, @code{getframe} or @code{pause} functions are eventually interrupted.
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuipanelresizefcn}
@prindex uipanel resizefcn
@item @code{resizefcn}: string | function handle, def. @code{[](0x0)}
@code{resizefcn} is deprecated.  Use @code{sizechangedfcn} instead.


@anchor{XREFuipanelsizechangedfcn}
@prindex uipanel sizechangedfcn
@item @code{sizechangedfcn}: string | function handle, def. @code{[](0x0)}
Callback triggered when the panel size is changed.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.

@end table

@anchor{XREFuipanelcategoryCreation/Deletion}
@subsubheading Creation/Deletion
@prindex uipanel Creation/Deletion

@table @asis

@anchor{XREFuipanelbeingdeleted}
@prindex uipanel beingdeleted
@item @code{beingdeleted}: @{@qcode{"off"}@} | @qcode{"on"}
Property indicating that a function has initiated deletion of the object.  @code{beingdeleted} is set to true until the object no longer exists.


@anchor{XREFuipanelcreatefcn}
@prindex uipanel createfcn
@item @code{createfcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately after uipanel has been created.  Function is set by using default property on root object, e.g., @code{set (groot, "defaultuipanelcreatefcn", 'disp ("uipanel created!")')}.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuipaneldeletefcn}
@prindex uipanel deletefcn
@item @code{deletefcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately before uipanel is deleted.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.

@end table

@anchor{XREFuipanelcategoryDisplay}
@subsubheading Display
@prindex uipanel Display

@table @asis

@anchor{XREFuipanelclipping}
@prindex uipanel clipping
@item @code{clipping}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{clipping} is @qcode{"on"}, the uipanel is clipped in its parent axes limits.


@anchor{XREFuipanelvisible}
@prindex uipanel visible
@item @code{visible}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{visible} is @qcode{"off"}, the uipanel is not rendered on screen.

@end table

@anchor{XREFuipanelcategoryMouseInteraction}
@subsubheading Mouse Interaction
@prindex uipanel MouseInteraction

@table @asis

@anchor{XREFuipanelbuttondownfcn}
@prindex uipanel buttondownfcn
@item @code{buttondownfcn}: string | function handle, def. @code{[](0x0)}
For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFuipanelcontextmenu}
@prindex uipanel contextmenu
@item @code{contextmenu}: graphics handle, def. @code{[](0x0)}
Graphics handle of the uicontextmenu object that is currently associated to this uipanel object.


@anchor{XREFuipanelhittest}
@prindex uipanel hittest
@item @code{hittest}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether uipanel processes mouse events or passes them to ancestors of the object.  When enabled, the object may respond to mouse clicks by evaluating the @qcode{"buttondownfcn"}, showing the uicontextmenu, and eventually becoming the root @qcode{"currentobject"}.  This property is only relevant when the object can accept mouse clicks which is determined by the @qcode{"pickableparts"} property.  @xref{XREFuipanelpickableparts, , @w{pickableparts property}}.


@anchor{XREFuipanelpickableparts}
@prindex uipanel pickableparts
@item @code{pickableparts}: @qcode{"all"} | @qcode{"none"} | @{@qcode{"visible"}@}
Specify whether uipanel will accept mouse clicks.  By default, @code{pickableparts} is @qcode{"visible"} and only visible parts of the uipanel or its children may react to mouse clicks.  When @code{pickableparts} is @qcode{"all"} both visible and invisible parts (or children) may react to mouse clicks.  When @code{pickableparts} is @qcode{"none"} mouse clicks on the object are ignored and transmitted to any objects underneath this one.  When an object is configured to accept mouse clicks the @qcode{"hittest"} property will determine how they are processed.  @xref{XREFuipanelhittest, , @w{hittest property}}.


@anchor{XREFuipanelselected}
@prindex uipanel selected
@item @code{selected}: @{@qcode{"off"}@} | @qcode{"on"}
Property indicates whether this uipanel is selected.


@anchor{XREFuipanelselectionhighlight}
@prindex uipanel selectionhighlight
@item @code{selectionhighlight}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{selectionhighlight} is @qcode{"on"}, then the uipanel's selection state is visually highlighted.

@end table

@anchor{XREFuipanelcategoryObjectIdentification}
@subsubheading Object Identification
@prindex uipanel ObjectIdentification

@table @asis

@anchor{XREFuipaneltag}
@prindex uipanel tag
@item @code{tag}: string, def. @qcode{""}
A user-defined string to label the graphics object.


@anchor{XREFuipaneltype}
@prindex uipanel type
@item @code{type} (read-only): string
Class name of the graphics object.  @code{type} is always @qcode{"uipanel"}.


@anchor{XREFuipaneluserdata}
@prindex uipanel userdata
@item @code{userdata}: Any Octave data, def. @code{[](0x0)}
User-defined data to associate with the graphics object.

@end table

@anchor{XREFuipanelcategoryObjectPosition}
@subsubheading Object Position
@prindex uipanel ObjectPosition

@table @asis

@anchor{XREFuipanelposition}
@prindex uipanel position
@item @code{position}: four-element vector, def. @code{[0   0   1   1]}
Size of the panel represented as the four-element vector [left, bottom, width, height].


@anchor{XREFuipanelunits}
@prindex uipanel units
@item @code{units}: @qcode{"centimeters"} | @qcode{"characters"} | @qcode{"inches"} | @{@qcode{"normalized"}@} | @qcode{"pixels"} | @qcode{"points"}
Unit of measurement used to interpret the @qcode{"position"} property.

@end table

@anchor{XREFuipanelcategoryParent/Children}
@subsubheading Parent/Children
@prindex uipanel Parent/Children

@table @asis

@anchor{XREFuipanelchildren}
@prindex uipanel children
@item @code{children} (read-only): vector of graphics handles, def. @code{[](0x1)}
Graphics handles of the uipanel's children.


@anchor{XREFuipanelhandlevisibility}
@prindex uipanel handlevisibility
@item @code{handlevisibility}: @qcode{"callback"} | @qcode{"off"} | @{@qcode{"on"}@}
If @code{handlevisibility} is @qcode{"off"}, the uipanel's handle is not visible in its parent's @qcode{"children"} property.


@anchor{XREFuipanelparent}
@prindex uipanel parent
@item @code{parent}: graphics handle
Handle of the parent graphics object.

@end table

@anchor{XREFuipanelcategoryTextAppearance}
@subsubheading Text Appearance
@prindex uipanel TextAppearance

@table @asis

@anchor{XREFuipanelfontangle}
@prindex uipanel fontangle
@item @code{fontangle}: @qcode{"italic"} | @{@qcode{"normal"}@}
Control whether the font is italic or normal.


@anchor{XREFuipanelfontname}
@prindex uipanel fontname
@item @code{fontname}: string, def. @qcode{"*"}
Name of font used for text rendering.  When setting this property, the text rendering engine will search for a matching font in your system.  If none is found then text is rendered using a default sans serif font (same as the default @qcode{"*"} value).

Programming Note: On systems that don’t use FontConfig natively (all but Linux), the font cache is built when Octave is installed.  You will need to run @code{system ("fc-cache -fv")} manually after installing new fonts.


@anchor{XREFuipanelfontsize}
@prindex uipanel fontsize
@item @code{fontsize}: scalar, def. @code{10}
Size of the font used for text rendering.  @xref{XREFuipanelfontunits, , fontunits property}.


@anchor{XREFuipanelfontunits}
@prindex uipanel fontunits
@item @code{fontunits}: @qcode{"centimeters"} | @qcode{"inches"} | @qcode{"normalized"} | @qcode{"pixels"} | @{@qcode{"points"}@}
Units used to interpret the @qcode{"fontsize"} property.


@anchor{XREFuipanelfontweight}
@prindex uipanel fontweight
@item @code{fontweight}: @qcode{"bold"} | @{@qcode{"normal"}@}
Control the variant of the base font used for text rendering.


@anchor{XREFuipaneltitle}
@prindex uipanel title
@item @code{title}: string, def. @qcode{""}
The text for the panel title.


@anchor{XREFuipaneltitleposition}
@prindex uipanel titleposition
@item @code{titleposition}: @qcode{"centerbottom"} | @qcode{"centertop"} | @qcode{"leftbottom"} | @{@qcode{"lefttop"}@} | @qcode{"rightbottom"} | @qcode{"righttop"}
Relative position of the title within the panel.

@end table