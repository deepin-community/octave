@c DO NOT EDIT!  Generated automatically by genpropdoc.m.

@c Copyright (C) 2014-2024 The Octave Project Developers
@c
@c See the file COPYRIGHT.md in the top-level directory of this
@c distribution or <https://octave.org/copyright/>.
@c
@c This file is part of Octave.
@c
@c Octave is free software: you can redistribute it and/or modify it
@c under the terms of the GNU General Public License as published by
@c the Free Software Foundation, either version 3 of the License, or
@c (at your option) any later version.
@c
@c Octave is distributed in the hope that it will be useful, but
@c WITHOUT ANY WARRANTY; without even the implied warranty of
@c MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
@c GNU General Public License for more details.
@c
@c You should have received a copy of the GNU General Public License
@c along with Octave; see the file COPYING.  If not, see
@c <https://www.gnu.org/licenses/>.

Properties of @code{axes} objects (@pxref{XREFaxes,,axes}):

@subsubheading Categories:

@ref{XREFaxescategoryAutomaticChildProperties, , @w{Automatic Child Properties}}@: | @ref{XREFaxescategoryAxesBoxAppearance, , @w{Axes Box Appearance}}@: | @ref{XREFaxescategoryAxesGridAppearance, , @w{Axes Grid Appearance}}@: | @ref{XREFaxescategoryCallbackExecution, , @w{Callback Execution}}@: | @ref{XREFaxescategoryCameraandViewControls, , @w{Camera and View Controls}}@: | @ref{XREFaxescategoryColorandTransparency, , @w{Color and Transparency}}@: | @ref{XREFaxescategoryCreation/Deletion, , @w{Creation/Deletion}}@: | @ref{XREFaxescategoryDisplay, , @w{Display}}@: | @ref{XREFaxescategoryMouseInteraction, , @w{Mouse Interaction}}@: | @ref{XREFaxescategoryObjectIdentification, , @w{Object Identification}}@: | @ref{XREFaxescategoryObjectPosition, , @w{Object Position}}@: | @ref{XREFaxescategoryParent/Children, , @w{Parent/Children}}@: | @ref{XREFaxescategoryTextAppearance, , @w{Text Appearance}}@: 

@anchor{XREFaxescategoryAutomaticChildProperties}
@subsubheading Automatic Child Properties
@prindex axes AutomaticChildProperties

@table @asis

@anchor{XREFaxescolororder}
@prindex axes colororder
@item @code{colororder}: N-by-3 RGB matrix, def. 7-by-3 double
RGB values used by plot function for child object coloring.


@anchor{XREFaxescolororderindex}
@prindex axes colororderindex
@item @code{colororderindex}: integer, def. @code{1}
Index of the next color from the @ref{XREFaxescolororder, , @w{@qcode{"colororder"} property}} to be used by Axes-child objects.


@anchor{XREFaxeslinestyleorder}
@prindex axes linestyleorder
@item @code{linestyleorder}: def. @qcode{"-"}
List of linestyles to be used in order by axes child objects, specified as a cell array of line specification strings.  Note that the linestyle is only incremented after cycling through the full @ref{XREFaxescolororder, , @qcode{"colororder"}} list.  @xref{Line Styles}.


@anchor{XREFaxeslinestyleorderindex}
@prindex axes linestyleorderindex
@item @code{linestyleorderindex}: whole number scalar, def. @code{1}
Index of the next linestyle from the @ref{XREFaxeslinestyleorder, , @w{@qcode{"linestyleorder"} property}} to be used by Axes-child objects.


@anchor{XREFaxesnextseriesindex}
@prindex axes nextseriesindex
@item @code{nextseriesindex} (read-only): whole number scalar, def. @code{1}
Current index value into the @ref{XREFaxescolororder, , "colororder"} and @ref{XREFaxeslinestyleorder, , "linestyleorder"} properties, indicating the item that will be used by the next child object

@end table

@anchor{XREFaxescategoryAxesBoxAppearance}
@subsubheading Axes Box Appearance
@prindex axes AxesBoxAppearance

@table @asis

@anchor{XREFaxesbox}
@prindex axes box
@item @code{box}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether the axes has a surrounding box.


@anchor{XREFaxesboxstyle}
@prindex axes boxstyle
@item @code{boxstyle}: @{@qcode{"back"}@} | @qcode{"full"}
For 3-D axes, control whether the @qcode{"full"} box is drawn or only the 3 @qcode{"back"} axes.


@anchor{XREFaxescolor}
@prindex axes color
@item @code{color}: colorspec, def. @code{[1   1   1]}
Color of the axes background.  @xref{Colors, , colorspec}.


@anchor{XREFaxesdataaspectratio}
@prindex axes dataaspectratio
@item @code{dataaspectratio}: three-element vector, def. @code{[1   1   1]}
Specify the relative height and width of the data displayed in the axes.  Setting @code{dataaspectratio} to @w{@code{[1, 2]}} causes the length of one unit as displayed on the x-axis to be the same as the length of 2 units on the y-axis.  @xref{XREFdaspect, , daspect function}.  Setting @code{dataaspectratio} also forces the @code{dataaspectratiomode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesdataaspectratiomode}
@prindex axes dataaspectratiomode
@item @code{dataaspectratiomode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the data aspect ratio mode, either manually set by the @ref{XREFaxesdataaspectratio, , @w{@qcode{"dataaspectratio"} property}} or automatically set by Octave in combination with other display properties to fit the data in the current view.


@anchor{XREFaxeslayer}
@prindex axes layer
@item @code{layer}: @{@qcode{"bottom"}@} | @qcode{"top"}
Control whether the axes is drawn below child graphics objects (ticks, labels, etc.@: covered by plotted objects) or above.


@anchor{XREFaxeslayout}
@prindex axes layout
@item @code{layout} (read-only): def. @code{[](0x0)}
Tiled and gridded chart layout is not yet implemented for axes objects.  @code{layout} is unused.


@anchor{XREFaxeslinewidth}
@prindex axes linewidth
@item @code{linewidth}: scalar, def. @code{0.5000}
Width of the main axes lines.


@anchor{XREFaxestickdir}
@prindex axes tickdir
@item @code{tickdir}: @qcode{"both"} | @{@qcode{"in"}@} | @qcode{"none"} | @qcode{"out"}
Control whether axes tick marks project @qcode{"in"} to the plot box or @qcode{"out"}.  The value @qcode{"both"} will draw tick marks both in and out.  The value @qcode{"none"} means no tick marks will be drawn, although tick labels will still be rendered.  Setting @code{tickdir} also forces the @code{tickdirmode} property to be set to @qcode{"manual"}..  Note that the default is @qcode{"in"} for 2-D and @qcode{"out"} for 3-D plots.


@anchor{XREFaxestickdirmode}
@prindex axes tickdirmode
@item @code{tickdirmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the tickdir mode, either manually set by the @ref{XREFaxestickdir, , @w{@qcode{"tickdir"} property}} or automatically set to the default for the current view.


@anchor{XREFaxesticklength}
@prindex axes ticklength
@item @code{ticklength}: two-element vector, def. @code{[0.010000   0.025000]}
Two-element vector @code{[2Dlen 3Dlen]} specifying the length of the tickmarks relative to the longest visible axis.


@anchor{XREFaxestoolbar}
@prindex axes toolbar
@item @code{toolbar} (read-only): def. @code{[](0x0)}
AxesToolbar objects is not yet implemented for axes objects.  @code{toolbar} is unused.


@anchor{XREFaxesxaxis}
@prindex axes xaxis
@item @code{xaxis} (read-only): def. @code{[](0x0)}
Axes Ruler objects is not yet implemented for axes objects.  @code{xaxis} is unused.


@anchor{XREFaxesxaxislocation}
@prindex axes xaxislocation
@item @code{xaxislocation}: @{@qcode{"bottom"}@} | @qcode{"origin"} | @qcode{"top"}
Control the x-axis location.


@anchor{XREFaxesxcolor}
@prindex axes xcolor
@item @code{xcolor}: @{colorspec@} | @qcode{"none"}, def. @code{[0.1500   0.1500   0.1500]}
Color of the x-axis.  @xref{Colors, , colorspec}.  Setting @code{xcolor} also forces the @code{xcolormode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesxcolormode}
@prindex axes xcolormode
@item @code{xcolormode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the setting determining the color that is applied to the x-axis grid lines.  If set to @qcode{"auto"} and/or the @ref{XREFaxesgridcolormode, , @w{@qcode{"gridcolormode"} property}} is set to @qcode{"manual"}, the x-axis grid color will be defined by the @ref{XREFaxesgridcolor, , @w{@qcode{"gridcolor"} property}}.  Otherwise the x-axis grid color will be defined by the @ref{XREFaxesxcolor, , @w{@qcode{"xcolor"} property}}.


@anchor{XREFaxesxdir}
@prindex axes xdir
@item @code{xdir}: @{@qcode{"normal"}@} | @qcode{"reverse"}
Direction of the x axis: @qcode{"normal"} is left to right in default 2-D and 3-D views.


@anchor{XREFaxesxlim}
@prindex axes xlim
@item @code{xlim}: two-element vector, def. @code{[0   1]}
Two-element vector @code{[xmin xmax]} specifying the limits for the x-axis.  Setting @code{xlim} also forces the @code{xlimmode} property to be set to @qcode{"manual"}..   @xref{XREFxlim, , @w{xlim function}}.


@anchor{XREFaxesxlimitmethod}
@prindex axes xlimitmethod
@item @code{xlimitmethod}: @qcode{"padded"} | @{@qcode{"tickaligned"}@} | @qcode{"tight"}
Method used to determine the x-axis limits when the @code{xlimmode} property is @qcode{"auto"}.  The default value, @qcode{"tickaligned"} makes limits align with the closest ticks.  With value @qcode{"tight"} the limits are adjusted to enclose all the graphics objects in the axes, while with value @qcode{"padded"}, an additional margin of about 7% of the data extent is added around the objects.  @xref{XREFaxis, , @w{axis function}}.


@anchor{XREFaxesxlimmode}
@prindex axes xlimmode
@item @code{xlimmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the x-axis limit selection method, either manually set with the @ref{XREFaxesxlim, , @w{@qcode{"xlim"} property}} or automatically set to span the plotted data according to the @ref{XREFaxesxlimitmethod, , @w{@qcode{"xlimitmethod"} property}}.


@anchor{XREFaxesxminortick}
@prindex axes xminortick
@item @code{xminortick}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether minor x tick marks are displayed.


@anchor{XREFaxesxtick}
@prindex axes xtick
@item @code{xtick}: vector
Position of x tick marks.  Setting @code{xtick} also forces the @code{xtickmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesxtickmode}
@prindex axes xtickmode
@item @code{xtickmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Setting to determine whether the xtick locations and spacing are set automatically by Octave or manually using the @ref{XREFaxesxtick, , @w{@qcode{"xtick"} property}}.


@anchor{XREFaxesyaxis}
@prindex axes yaxis
@item @code{yaxis} (read-only): def. @code{[](0x0)}
Axes Ruler objects is not yet implemented for axes objects.  @code{yaxis} is unused.


@anchor{XREFaxesyaxislocation}
@prindex axes yaxislocation
@item @code{yaxislocation}: @{@qcode{"left"}@} | @qcode{"origin"} | @qcode{"right"}
Control the y-axis location.


@anchor{XREFaxesycolor}
@prindex axes ycolor
@item @code{ycolor}: @{colorspec@} | @qcode{"none"}, def. @code{[0.1500   0.1500   0.1500]}
Color of the y-axis.  @xref{Colors, , colorspec}.


@anchor{XREFaxesycolormode}
@prindex axes ycolormode
@item @code{ycolormode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the setting determining the color that is applied to the y-axis grid lines.  If set to @qcode{"auto"} and/or the @ref{XREFaxesgridcolormode, , @w{@qcode{"gridcolormode"} property}} is set to @qcode{"manual"}, the y-axis grid color will be defined by the @ref{XREFaxesgridcolor, , @w{@qcode{"gridcolor"} property}}.  Otherwise the y-axis grid color will be defined by the @ref{XREFaxesycolor, , @w{@qcode{"ycolor"} property}}.


@anchor{XREFaxesydir}
@prindex axes ydir
@item @code{ydir}: @{@qcode{"normal"}@} | @qcode{"reverse"}
Direction of the y-axis: @qcode{"normal"} is bottom to top in 2-D and front to back in 3-D default views.


@anchor{XREFaxesylim}
@prindex axes ylim
@item @code{ylim}: two-element vector, def. @code{[0   1]}
Two-element vector @code{[ymin ymax]} specifying the limits for the y-axis.  Setting @code{ylim} also forces the @code{ylimmode} property to be set to @qcode{"manual"}..  @xref{XREFylim, , @w{ylim function}}.


@anchor{XREFaxesylimitmethod}
@prindex axes ylimitmethod
@item @code{ylimitmethod}: @qcode{"padded"} | @{@qcode{"tickaligned"}@} | @qcode{"tight"}
Method used to determine the y-axis limits when the @code{xlimmode} property is @qcode{"auto"}.  The default value, @qcode{"tickaligned"} makes limits align with the closest ticks.  With value @qcode{"tight"} the limits are adjusted to enclose all the graphics objects in the axes, while with value @qcode{"padded"}, an additional margin of about 7% of the data extent is added around the objects.  @xref{XREFaxis, , @w{axis function}}.


@anchor{XREFaxesylimmode}
@prindex axes ylimmode
@item @code{ylimmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the y-axis limit selection method, either manually set with the @ref{XREFaxesylim, , @w{@qcode{"ylim"} property}} or automatically set to span the plotted data according to the @ref{XREFaxesylimitmethod, , @w{@qcode{"ylimitmethod"} property}}.


@anchor{XREFaxesytick}
@prindex axes ytick
@item @code{ytick}: vector
Position of y tick marks.  Setting @code{ytick} also forces the @code{ytickmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesytickmode}
@prindex axes ytickmode
@item @code{ytickmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Setting to determine whether the ytick locations and spacing are set automatically by Octave or manually using the @ref{XREFaxesytick, , @w{@qcode{"ytick"} property}}.


@anchor{XREFaxeszaxis}
@prindex axes zaxis
@item @code{zaxis} (read-only): def. @code{[](0x0)}
Axes Ruler objects is not yet implemented for axes objects.  @code{zaxis} is unused.


@anchor{XREFaxeszcolor}
@prindex axes zcolor
@item @code{zcolor}: @{colorspec@} | @qcode{"none"}, def. @code{[0.1500   0.1500   0.1500]}
Color of the z-axis.  @xref{Colors, , colorspec}.


@anchor{XREFaxeszcolormode}
@prindex axes zcolormode
@item @code{zcolormode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the setting determining the color that is applied to the z-axis grid lines.  If set to @qcode{"auto"} and/or the @ref{XREFaxesgridcolormode, , @w{@qcode{"gridcolormode"} property}} is set to @qcode{"manual"}, the z-axis grid color will be defined by the @ref{XREFaxesgridcolor, , @w{@qcode{"gridcolor"} property}}.  Otherwise the z-axis grid color will be defined by the @ref{XREFaxeszcolor, , @w{@qcode{"zcolor"} property}}.


@anchor{XREFaxeszdir}
@prindex axes zdir
@item @code{zdir}: @{@qcode{"normal"}@} | @qcode{"reverse"}
Direction of the y-axis: @qcode{"normal"} is bottom to top in default 3-D views.


@anchor{XREFaxeszlim}
@prindex axes zlim
@item @code{zlim}: two-element vector, def. @code{[0   1]}
Two-element vector @code{[zmin zmax]} specifying the limits for the z-axis.  Setting @code{zlim} also forces the @code{zlimmode} property to be set to @qcode{"manual"}..  @xref{XREFzlim, , @w{zlim function}}.


@anchor{XREFaxeszlimitmethod}
@prindex axes zlimitmethod
@item @code{zlimitmethod}: @qcode{"padded"} | @{@qcode{"tickaligned"}@} | @qcode{"tight"}
Method used to determine the z-axis limits when the @code{xlimmode} property is @qcode{"auto"}.  The default value, @qcode{"tickaligned"} makes limits align with the closest ticks.  With value @qcode{"tight"} the limits are adjusted to enclose all the graphics objects in the axes, while with value @qcode{"padded"}, an additional margin of about 7% of the data extent is added around the objects.  @xref{XREFaxis, , @w{axis function}}.


@anchor{XREFaxeszlimmode}
@prindex axes zlimmode
@item @code{zlimmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the z-axis limit selection method, either manually set with the @ref{XREFaxeszlim, , @w{@qcode{"zlim"} property}} or automatically set to span the plotted data according to the @ref{XREFaxeszlimitmethod, , @w{@qcode{"zlimitmethod"} property}}.


@anchor{XREFaxeszminortick}
@prindex axes zminortick
@item @code{zminortick}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether minor z tick marks are displayed.


@anchor{XREFaxesztick}
@prindex axes ztick
@item @code{ztick}: vector
Position of z tick marks.  Setting @code{ztick} also forces the @code{ztickmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesztickmode}
@prindex axes ztickmode
@item @code{ztickmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Setting to determine whether the ztick locations and spacing are set automatically by Octave or manually using the @ref{XREFaxesztick, , @w{@qcode{"ztick"} property}}.

@end table

@anchor{XREFaxescategoryAxesGridAppearance}
@subsubheading Axes Grid Appearance
@prindex axes AxesGridAppearance

@table @asis

@anchor{XREFaxesgridalpha}
@prindex axes gridalpha
@item @code{gridalpha}: def. @code{0.1500}
Transparency is not yet implemented for axes objects.  @code{gridalpha} is unused.


@anchor{XREFaxesgridalphamode}
@prindex axes gridalphamode
@item @code{gridalphamode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Transparency is not yet implemented for axes objects.  @code{gridalphamode} is unused.


@anchor{XREFaxesgridcolor}
@prindex axes gridcolor
@item @code{gridcolor}: @{colorspec@} | @qcode{"none"}, def. @code{[0.1500   0.1500   0.1500]}
Color of the major grid lines.  @xref{Colors, , colorspec}.  Setting @code{gridcolor} also forces the @code{gridcolormode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesgridcolormode}
@prindex axes gridcolormode
@item @code{gridcolormode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the gridcolor mode, either manually set by the @ref{XREFaxesgridcolor, , @w{@qcode{"gridcolor"} property}} or automatically set by Octave to the default value.


@anchor{XREFaxesgridlinestyle}
@prindex axes gridlinestyle
@item @code{gridlinestyle}: @{@qcode{"-"}@} | @qcode{"--"} | @qcode{"-."} | @qcode{":"} | @qcode{"none"}
@xref{Line Styles}.


@anchor{XREFaxesinnerposition}
@prindex axes innerposition
@item @code{innerposition}: four-element vector, def. @code{[0.1300   0.1100   0.7750   0.8150]}
The @qcode{"innerposition"} property is the same as the @ref{XREFaxesposition, , @w{@qcode{"position"} property}}.


@anchor{XREFaxesminorgridalpha}
@prindex axes minorgridalpha
@item @code{minorgridalpha}: def. @code{0.2500}
Transparency is not yet implemented for axes objects.  @code{minorgridalpha} is unused.


@anchor{XREFaxesminorgridalphamode}
@prindex axes minorgridalphamode
@item @code{minorgridalphamode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Transparency is not yet implemented for axes objects.  @code{minorgridalphamode} is unused.


@anchor{XREFaxesminorgridcolor}
@prindex axes minorgridcolor
@item @code{minorgridcolor}: @{colorspec@} | @qcode{"none"}, def. @code{[0.1000   0.1000   0.1000]}
Color of the minor grid lines.  @xref{Colors, , colorspec}.  Setting @code{minorgridcolor} also forces the @code{minorgridcolormode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesminorgridcolormode}
@prindex axes minorgridcolormode
@item @code{minorgridcolormode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the minorgridcolor mode, either manually set by the @ref{XREFaxesminorgridcolor, , @w{@qcode{"minorgridcolor"} property}} or automatically set by Octave to the default value.


@anchor{XREFaxesminorgridlinestyle}
@prindex axes minorgridlinestyle
@item @code{minorgridlinestyle}: @qcode{"-"} | @qcode{"--"} | @qcode{"-."} | @{@qcode{":"}@} | @qcode{"none"}
@xref{Line Styles}.


@anchor{XREFaxesxgrid}
@prindex axes xgrid
@item @code{xgrid}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether major x grid lines are displayed.


@anchor{XREFaxesxminorgrid}
@prindex axes xminorgrid
@item @code{xminorgrid}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether minor x grid lines are displayed.


@anchor{XREFaxesxscale}
@prindex axes xscale
@item @code{xscale}: @{@qcode{"linear"}@} | @qcode{"log"}
Set the x-axis to a linear or logarithmic scale.


@anchor{XREFaxesygrid}
@prindex axes ygrid
@item @code{ygrid}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether major y grid lines are displayed.


@anchor{XREFaxesyminorgrid}
@prindex axes yminorgrid
@item @code{yminorgrid}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether minor y grid lines are displayed.


@anchor{XREFaxesyminortick}
@prindex axes yminortick
@item @code{yminortick}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether minor y tick marks are displayed.


@anchor{XREFaxesyscale}
@prindex axes yscale
@item @code{yscale}: @{@qcode{"linear"}@} | @qcode{"log"}
Set the y-axis to a linear or logarithmic scale.


@anchor{XREFaxeszgrid}
@prindex axes zgrid
@item @code{zgrid}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether major z grid lines are displayed.


@anchor{XREFaxeszminorgrid}
@prindex axes zminorgrid
@item @code{zminorgrid}: @{@qcode{"off"}@} | @qcode{"on"}
Control whether minor z grid lines are displayed.


@anchor{XREFaxeszscale}
@prindex axes zscale
@item @code{zscale}: @{@qcode{"linear"}@} | @qcode{"log"}
Set the z-axis to a linear or logarithmic scale.

@end table

@anchor{XREFaxescategoryCallbackExecution}
@subsubheading Callback Execution
@prindex axes CallbackExecution

@table @asis

@anchor{XREFaxesbusyaction}
@prindex axes busyaction
@item @code{busyaction}: @qcode{"cancel"} | @{@qcode{"queue"}@}
Define how Octave handles the execution of this object's callback properties when it is unable to interrupt another object's executing callback.  This is only relevant when the currently executing callback object has its @code{interruptible} property set to @qcode{"off"}.  The @code{busyaction} property of the interrupting callback object indicates whether the interrupting callback is queued (@qcode{"queue"} (default)) or discarded (@qcode{"cancel"}).
@xref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFaxesinteractions}
@prindex axes interactions
@item @code{interactions} (read-only): def. @code{[](0x0)}
Interaction objects is not yet implemented for axes objects.  @code{interactions} is unused.


@anchor{XREFaxesinterruptible}
@prindex axes interruptible
@item @code{interruptible}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether this object's callback functions may be interrupted by other callbacks.  By default @code{interruptible} is @qcode{"on"} and callbacks that make use of @code{drawnow}, @code{figure}, @code{waitfor}, @code{getframe} or @code{pause} functions are eventually interrupted.
@xref{Callbacks, , @w{Callbacks section}}.

@end table

@anchor{XREFaxescategoryCameraandViewControls}
@subsubheading Camera and View Controls
@prindex axes CameraandViewControls

@table @asis

@anchor{XREFaxescameraposition}
@prindex axes cameraposition
@item @code{cameraposition}: three-element vector, def. @code{[0.5000   0.5000   9.1603]}
Coordinates of the camera position viewing the axes.  Setting @code{cameraposition} also forces the @code{camerapositionmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxescamerapositionmode}
@prindex axes camerapositionmode
@item @code{camerapositionmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the camera position property, whether automatically set according to the @ref{XREFview, , view function}, or manually set with the @ref{XREFaxescameraposition, , @w{@qcode{"cameraposition"} property}}.


@anchor{XREFaxescameratarget}
@prindex axes cameratarget
@item @code{cameratarget}: three-element vector, def. @code{[0.5000   0.5000   0.5000]}
Coordinates of the point at which the viewing camera is aimed.  Setting @code{cameratarget} also forces the @code{cameratargetmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxescameratargetmode}
@prindex axes cameratargetmode
@item @code{cameratargetmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of camera target property, either manually set with the @ref{XREFaxescameratarget, , @w{@qcode{"cameratarget"} property}} or automatically positioned at the center of the axes plot area.


@anchor{XREFaxescameraupvector}
@prindex axes cameraupvector
@item @code{cameraupvector}: three-element vector, def. @code{[0   1   0]}
A 3-element vector defining the upward direction of the current view.  Note that the default is [0 1 0] for 2-D plots and [0 0 1] for 3-D plots.  Setting @code{cameraupvector} also forces the @code{cameraupvectormode} property to be set to @qcode{"manual"}..


@anchor{XREFaxescameraupvectormode}
@prindex axes cameraupvectormode
@item @code{cameraupvectormode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of camera up vector property, set to manual when the @ref{XREFaxescameraupvector, , @w{@qcode{"cameraupvector"} property}} is used to change the vector from the 2-D or 3-D default values.


@anchor{XREFaxescameraviewangle}
@prindex axes cameraviewangle
@item @code{cameraviewangle}: scalar, def. @code{6.6086}
The camera's field of view defined as an angle between 0 and 180 degrees.  Setting @code{cameraviewangle} also forces the @code{cameraviewanglemode} property to be set to @qcode{"manual"}..


@anchor{XREFaxescameraviewanglemode}
@prindex axes cameraviewanglemode
@item @code{cameraviewanglemode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the camera view angle property, either manually set with the @ref{XREFaxescameraviewangle, , @w{@qcode{"cameraviewangle"} property}} or automatically set by Octave to include all visible objects.


@anchor{XREFaxesprojection}
@prindex axes projection
@item @code{projection}: @{@qcode{"orthographic"}@} | @qcode{"perspective"}
Orthographic/perspective projection adjustment is not yet implemented for axes objects.  @code{projection} is unused.


@anchor{XREFaxesview}
@prindex axes view
@item @code{view}: two-element vector, def. @code{[0   90]}
Two-element vector @code{[azimuth elevation]} specifying the viewpoint for three-dimensional plots.

@end table

@anchor{XREFaxescategoryColorandTransparency}
@subsubheading Color and Transparency
@prindex axes ColorandTransparency

@table @asis

@anchor{XREFaxesalim}
@prindex axes alim
@item @code{alim}: def. @code{[0   1]}
Transparency is not yet implemented for axes objects.  @code{alim} is unused.


@anchor{XREFaxesalimmode}
@prindex axes alimmode
@item @code{alimmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Transparency is not yet implemented for axes objects.  @code{alimmode} is unused.


@anchor{XREFaxesalphamap}
@prindex axes alphamap
@item @code{alphamap}: def. @code{[](0x0)}
Transparency is not yet implemented for axes objects.  @code{alphamap} is unused.


@anchor{XREFaxesalphascale}
@prindex axes alphascale
@item @code{alphascale}: @{@qcode{"linear"}@} | @qcode{"log"}
Transparency is not yet implemented for axes objects.  @code{alphascale} is unused.


@anchor{XREFaxesambientlightcolor}
@prindex axes ambientlightcolor
@item @code{ambientlightcolor}: def. @code{[1   1   1]}
Uniform background axes lighting is not yet implemented for axes objects.  @code{ambientlightcolor} is unused.


@anchor{XREFaxesclim}
@prindex axes clim
@item @code{clim}: two-element vector, def. @code{[0   1]}
Define limits for the color axis of axes children that have the @qcode{cdata} property.  Setting @code{clim} also forces the @code{climmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesclimmode}
@prindex axes climmode
@item @code{climmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the color limit mode, either manually set by the @ref{XREFaxesclim, , @w{@qcode{"clim"} property}} or automatically set by Octave to the minimum and maximum @qcode{cdata} values of axes's children.


@anchor{XREFaxescolormap}
@prindex axes colormap
@item @code{colormap}: N-by-3 matrix, def. 64-by-3 double
A matrix containing the RGB color map for this axes object.


@anchor{XREFaxescolorscale}
@prindex axes colorscale
@item @code{colorscale}: @{@qcode{"linear"}@} | @qcode{"log"}
Automatic linear/log color scaling is not yet implemented for axes objects.  @code{colorscale} is unused.

@end table

@anchor{XREFaxescategoryCreation/Deletion}
@subsubheading Creation/Deletion
@prindex axes Creation/Deletion

@table @asis

@anchor{XREFaxesbeingdeleted}
@prindex axes beingdeleted
@item @code{beingdeleted}: @{@qcode{"off"}@} | @qcode{"on"}
Property indicating that a function has initiated deletion of the object.  @code{beingdeleted} is set to true until the object no longer exists.


@anchor{XREFaxescreatefcn}
@prindex axes createfcn
@item @code{createfcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately after axes has been created.  Function is set by using default property on root object, e.g., @code{set (groot, "defaultaxescreatefcn", 'disp ("axes created!")')}.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFaxesdeletefcn}
@prindex axes deletefcn
@item @code{deletefcn}: string | function handle, def. @code{[](0x0)}
Callback function executed immediately before axes is deleted.

For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.

@end table

@anchor{XREFaxescategoryDisplay}
@subsubheading Display
@prindex axes Display

@table @asis

@anchor{XREFaxesclipping}
@prindex axes clipping
@item @code{clipping}: @qcode{"off"} | @{@qcode{"on"}@}
Axes-children clipping control is not yet implemented for axes objects.  @code{clipping} is unused.


@anchor{XREFaxesclippingstyle}
@prindex axes clippingstyle
@item @code{clippingstyle}: @{@qcode{"3dbox"}@} | @qcode{"rectangle"}
Axes-children clipping control is not yet implemented for axes objects.  @code{clippingstyle} is unused.


@anchor{XREFaxesvisible}
@prindex axes visible
@item @code{visible}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{visible} is @qcode{"off"}, the axes is not rendered on screen.

@end table

@anchor{XREFaxescategoryMouseInteraction}
@subsubheading Mouse Interaction
@prindex axes MouseInteraction

@table @asis

@anchor{XREFaxesbuttondownfcn}
@prindex axes buttondownfcn
@item @code{buttondownfcn}: string | function handle, def. @code{[](0x0)}
For information on how to write graphics listener functions see @ref{Callbacks, , @w{Callbacks section}}.


@anchor{XREFaxescontextmenu}
@prindex axes contextmenu
@item @code{contextmenu}: graphics handle, def. @code{[](0x0)}
Graphics handle of the uicontextmenu object that is currently associated to this axes object.


@anchor{XREFaxescurrentpoint}
@prindex axes currentpoint
@item @code{currentpoint}: 2-by-3 matrix, def. 2-by-3 double
Matrix @code{[xf, yf, zf; xb, yb, zb]} which holds the coordinates (in axes data units) of the point over which the mouse pointer was when the mouse button was pressed.  If a mouse callback function is defined, @code{currentpoint} holds the pointer coordinates at the time the mouse button was pressed.  For 3-D plots, the first row of the returned matrix specifies the point nearest to the current camera position and the second row the furthest point.  The two points forms a line which is perpendicular to the screen.


@anchor{XREFaxeshittest}
@prindex axes hittest
@item @code{hittest}: @qcode{"off"} | @{@qcode{"on"}@}
Specify whether axes processes mouse events or passes them to ancestors of the object.  When enabled, the object may respond to mouse clicks by evaluating the @qcode{"buttondownfcn"}, showing the uicontextmenu, and eventually becoming the root @qcode{"currentobject"}.  This property is only relevant when the object can accept mouse clicks which is determined by the @qcode{"pickableparts"} property.  @xref{XREFaxespickableparts, , @w{pickableparts property}}.


@anchor{XREFaxesmousewheelzoom}
@prindex axes mousewheelzoom
@item @code{mousewheelzoom}: scalar in the range (0, 1), def. @code{0.5000}
Fraction of axes limits to zoom for each wheel movement.


@anchor{XREFaxespickableparts}
@prindex axes pickableparts
@item @code{pickableparts}: @qcode{"all"} | @qcode{"none"} | @{@qcode{"visible"}@}
Specify whether axes will accept mouse clicks.  By default, @code{pickableparts} is @qcode{"visible"} and only visible parts of the axes or its children may react to mouse clicks.  When @code{pickableparts} is @qcode{"all"} both visible and invisible parts (or children) may react to mouse clicks.  When @code{pickableparts} is @qcode{"none"} mouse clicks on the object are ignored and transmitted to any objects underneath this one.  When an object is configured to accept mouse clicks the @qcode{"hittest"} property will determine how they are processed.  @xref{XREFaxeshittest, , @w{hittest property}}.


@anchor{XREFaxesselected}
@prindex axes selected
@item @code{selected}: @{@qcode{"off"}@} | @qcode{"on"}
Property indicates whether this axes is selected.


@anchor{XREFaxesselectionhighlight}
@prindex axes selectionhighlight
@item @code{selectionhighlight}: @qcode{"off"} | @{@qcode{"on"}@}
If @code{selectionhighlight} is @qcode{"on"}, then the axes's selection state is visually highlighted.

@end table

@anchor{XREFaxescategoryObjectIdentification}
@subsubheading Object Identification
@prindex axes ObjectIdentification

@table @asis

@anchor{XREFaxesnextplot}
@prindex axes nextplot
@item @code{nextplot}: @qcode{"add"} | @{@qcode{"replace"}@} | @qcode{"replacechildren"}
@code{nextplot} is used by high level plotting functions to decide what to do with graphics objects already present in the axes.  @xref{XREFnewplot, , @w{newplot function}}.  The state of @code{nextplot} is typically controlled using the @code{hold} function.  @xref{XREFhold, , @w{hold function}}.


@anchor{XREFaxestag}
@prindex axes tag
@item @code{tag}: string, def. @qcode{""}
A user-defined string to label the graphics object.


@anchor{XREFaxestitle}
@prindex axes title
@item @code{title}: graphics handle
Graphics handle of the title text object.


@anchor{XREFaxestype}
@prindex axes type
@item @code{type} (read-only): string
Class name of the graphics object.  @code{type} is always @qcode{"axes"}.


@anchor{XREFaxesuserdata}
@prindex axes userdata
@item @code{userdata}: Any Octave data, def. @code{[](0x0)}
User-defined data to associate with the graphics object.

@end table

@anchor{XREFaxescategoryObjectPosition}
@subsubheading Object Position
@prindex axes ObjectPosition

@table @asis

@anchor{XREFaxesouterposition}
@prindex axes outerposition
@item @code{outerposition}: four-element vector, def. @code{[0   0   1   1]}
Specify the position of the plot including titles, axes, and legend.  The four elements of the vector are the coordinates of the lower left corner and width and height of the plot, in units normalized to the width and height of the plot window.  For example, @code{[0.2, 0.3, 0.4, 0.5]} sets the lower left corner of the axes at @math{(0.2, 0.3)} and the width and height to be 0.4 and 0.5 respectively.  @xref{XREFaxesposition, , @w{position property}}.


@anchor{XREFaxesplotboxaspectratio}
@prindex axes plotboxaspectratio
@item @code{plotboxaspectratio}: def. @code{[1   1   1]}
@xref{XREFpbaspect, , pbaspect function}.  Setting @code{plotboxaspectratio} also forces the @code{plotboxaspectratiomode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesplotboxaspectratiomode}
@prindex axes plotboxaspectratiomode
@item @code{plotboxaspectratiomode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the plot box aspect ratio mode, either manually set by the @ref{XREFaxesdataaspectratio, , @w{@qcode{"dataaspectratio"} property}} or automatically set by Octave in combination with other display properties to fit the data in the current view.


@anchor{XREFaxesposition}
@prindex axes position
@item @code{position}: four-element vector, def. @code{[0.1300   0.1100   0.7750   0.8150]}
Specify the position of the plot excluding titles, axes, and legend.  The four elements of the vector are the coordinates of the lower left corner and width and height of the plot, in units normalized to the width and height of the plot window.  For example, @code{[0.2, 0.3, 0.4, 0.5]} sets the lower left corner of the axes at @math{(0.2, 0.3)} and the width and height to be 0.4 and 0.5 respectively.  @xref{XREFaxesouterposition, , @w{outerposition property}}.


@anchor{XREFaxespositionconstraint}
@prindex axes positionconstraint
@item @code{positionconstraint}: @qcode{"innerposition"} | @{@qcode{"outerposition"}@}
Specify which of @qcode{"innerposition"} or @qcode{"outerposition"} properties takes precedence when axes annotations extent changes.  @xref{XREFaxesinnerposition, , @w{@qcode{"innerposition"} property}}, and @ref{XREFaxesouterposition, , @w{@qcode{"outerposition"} property}}.


@anchor{XREFaxesunits}
@prindex axes units
@item @code{units}: @qcode{"centimeters"} | @qcode{"characters"} | @qcode{"inches"} | @{@qcode{"normalized"}@} | @qcode{"pixels"} | @qcode{"points"}
Units used to interpret the @qcode{"position"}, @qcode{"outerposition"}, and @qcode{"tightinset"} properties.

@end table

@anchor{XREFaxescategoryParent/Children}
@subsubheading Parent/Children
@prindex axes Parent/Children

@table @asis

@anchor{XREFaxeschildren}
@prindex axes children
@item @code{children} (read-only): vector of graphics handles, def. @code{[](0x1)}
Graphics handles of the axes's children.


@anchor{XREFaxeshandlevisibility}
@prindex axes handlevisibility
@item @code{handlevisibility}: @qcode{"callback"} | @qcode{"off"} | @{@qcode{"on"}@}
If @code{handlevisibility} is @qcode{"off"}, the axes's handle is not visible in its parent's @qcode{"children"} property.


@anchor{XREFaxesparent}
@prindex axes parent
@item @code{parent}: graphics handle
Handle of the parent graphics object.


@anchor{XREFaxessortmethod}
@prindex axes sortmethod
@item @code{sortmethod}: @qcode{"childorder"} | @{@qcode{"depth"}@}
Child display order control is not yet implemented for axes objects.  @code{sortmethod} is unused.

@end table

@anchor{XREFaxescategoryTextAppearance}
@subsubheading Text Appearance
@prindex axes TextAppearance

@table @asis

@anchor{XREFaxesfontangle}
@prindex axes fontangle
@item @code{fontangle}: @qcode{"italic"} | @{@qcode{"normal"}@}
Control whether the font is italic or normal.


@anchor{XREFaxesfontname}
@prindex axes fontname
@item @code{fontname}: string, def. @qcode{"*"}
Name of font used for text rendering.  When setting this property, the text rendering engine will search for a matching font in your system.  If none is found then text is rendered using a default sans serif font (same as the default @qcode{"*"} value).

Programming Note: On systems that don’t use FontConfig natively (all but Linux), the font cache is built when Octave is installed.  You will need to run @code{system ("fc-cache -fv")} manually after installing new fonts.


@anchor{XREFaxesfontsize}
@prindex axes fontsize
@item @code{fontsize}: scalar, def. @code{10}
Size of the font used for text rendering.  @xref{XREFaxesfontunits, , fontunits property}.  Setting @code{fontsize} also forces the @code{fontsizemode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesfontsizemode}
@prindex axes fontsizemode
@item @code{fontsizemode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Current state of the fontsize mode, either manually set by the @ref{XREFaxesfontsize, , @w{@qcode{"fontsize"} property}} or automatically set by Octave to maintain readability.


@anchor{XREFaxesfontsmoothing}
@prindex axes fontsmoothing
@item @code{fontsmoothing}: @qcode{"off"} | @{@qcode{"on"}@}
Control whether any text associated with axes is anti-aliased.


@anchor{XREFaxesfontunits}
@prindex axes fontunits
@item @code{fontunits}: @qcode{"centimeters"} | @qcode{"inches"} | @qcode{"normalized"} | @qcode{"pixels"} | @{@qcode{"points"}@}
Units used to interpret the @qcode{"fontsize"} property.


@anchor{XREFaxesfontweight}
@prindex axes fontweight
@item @code{fontweight}: @qcode{"bold"} | @{@qcode{"normal"}@}
Control the variant of the base font used for text rendering.


@anchor{XREFaxeslabelfontsizemultiplier}
@prindex axes labelfontsizemultiplier
@item @code{labelfontsizemultiplier}: def. @code{1.1000}
Ratio between the x/y/zlabel fontsize and the tick label fontsize.


@anchor{XREFaxeslegend}
@prindex axes legend
@item @code{legend} (read-only): def. @code{[](0x0)}
Legend property control is not yet implemented for axes objects.  @code{legend} is unused.  Use the @ref{XREFlegend, , legend function} to set legend properties.


@anchor{XREFaxesticklabelinterpreter}
@prindex axes ticklabelinterpreter
@item @code{ticklabelinterpreter}: @qcode{"latex"} | @qcode{"none"} | @{@qcode{"tex"}@}
Control the way x/y/zticklabel properties are interpreted.
@xref{Use of the "interpreter" Property, , @w{Use of the @qcode{"interpreter"} Property}}.


@anchor{XREFaxestightinset}
@prindex axes tightinset
@item @code{tightinset} (read-only): four-element vector
Size of the @code{[left bottom right top]} margins around the axes that enclose labels and title annotations.


@anchor{XREFaxestitlefontsizemultiplier}
@prindex axes titlefontsizemultiplier
@item @code{titlefontsizemultiplier}: positive scalar, def. @code{1.1000}
Ratio between the title fontsize and the tick label fontsize.


@anchor{XREFaxestitlefontweight}
@prindex axes titlefontweight
@item @code{titlefontweight}: @{@qcode{"bold"}@} | @qcode{"normal"}
Control variant of base font used for the axes title.


@anchor{XREFaxesxlabel}
@prindex axes xlabel
@item @code{xlabel}: graphics handle
Graphics handle of the x label text object.


@anchor{XREFaxesxticklabel}
@prindex axes xticklabel
@item @code{xticklabel}: string | cell array of strings, def. 6-by-1 cell
Labels of x tick marks.  Setting @code{xticklabel} also forces the @code{xticklabelmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesxticklabelmode}
@prindex axes xticklabelmode
@item @code{xticklabelmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Setting to determine whether the xtick labels are set automatically by Octave or manually using the @ref{XREFaxesxticklabel, , @w{@qcode{"xticklabel"} property}}.


@anchor{XREFaxesxticklabelrotation}
@prindex axes xticklabelrotation
@item @code{xticklabelrotation}: def. @code{0}
Axis label rotation is not yet implemented for axes objects.  @code{xticklabelrotation} is unused.


@anchor{XREFaxesylabel}
@prindex axes ylabel
@item @code{ylabel}: graphics handle
Graphics handle of the y label text object.


@anchor{XREFaxesyticklabel}
@prindex axes yticklabel
@item @code{yticklabel}: string | cell array of strings, def. 6-by-1 cell
Labels of y tick marks.  Setting @code{yticklabel} also forces the @code{yticklabelmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxesyticklabelmode}
@prindex axes yticklabelmode
@item @code{yticklabelmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Setting to determine whether the ytick labels are set automatically by Octave or manually using the @ref{XREFaxesyticklabel, , @w{@qcode{"yticklabel"} property}}.


@anchor{XREFaxesyticklabelrotation}
@prindex axes yticklabelrotation
@item @code{yticklabelrotation}: def. @code{0}
Axis label rotation is not yet implemented for axes objects.  @code{yticklabelrotation} is unused.


@anchor{XREFaxeszlabel}
@prindex axes zlabel
@item @code{zlabel}: graphics handle
Graphics handle of the z label text object.


@anchor{XREFaxeszticklabel}
@prindex axes zticklabel
@item @code{zticklabel}: string | cell array of strings, def. 6-by-1 cell
Labels of z tick marks.  Setting @code{zticklabel} also forces the @code{zticklabelmode} property to be set to @qcode{"manual"}..


@anchor{XREFaxeszticklabelmode}
@prindex axes zticklabelmode
@item @code{zticklabelmode}: @{@qcode{"auto"}@} | @qcode{"manual"}
Setting to determine whether the ztick labels are set automatically by Octave or manually using the @ref{XREFaxeszticklabel, , @w{@qcode{"zticklabel"} property}}.


@anchor{XREFaxeszticklabelrotation}
@prindex axes zticklabelrotation
@item @code{zticklabelrotation}: def. @code{0}
Axis label rotation is not yet implemented for axes objects.  @code{zticklabelrotation} is unused.

@end table